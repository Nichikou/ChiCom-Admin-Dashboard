<div className={styles["history-container"]}>
      <div className={styles["utilities-bar"]}>
        <div className={styles["filter-wrapper"]} ref={filterMenuRef}>
          <button
            className={styles["filter-menu-btn"]}
            onClick={() => setIsFilterMenuOpen(!isFilterMenuOpen)}
          >
            <FiFilter className={styles["filter-icon"]} />
            <div>Filters</div>
            <IoMdArrowDropdown className={styles["dropdown-icon"]} />
          </button>

          {isFilterMenuOpen && (
            <div className={styles["filter-menu"]}>
              {filterOptions.map((category) => (
                <div
                  id={category.filter_category}
                  className={styles["filter-category"]}
                >
                  <span className={styles["category-label"]}>
                    {category.filter_category}
                  </span>
                  {category.filter_items.map((option) => (
                    <label id={option.id}>
                      <input
                        type="checkbox"
                        checked={
                          option.id ===
                          selectedFilters[category.filter_category]
                        }
                        onChange={() =>
                          handleSelectedFilters(
                            category.filter_category,
                            option.id
                          )
                        }
                      />
                      <span className={styles["item-label"]}>
                        {option.label}
                      </span>
                    </label>
                  ))}
                </div>
              ))}
            </div>
          )}
        </div>

        <div className={styles["paging-wrapper"]}>
          <button className={styles["page-button"]} onClick={previousPage}>
            <GoTriangleLeft />
          </button>
          <form
            onSubmit={(event) => {
              handleSelectPageSubmission(event);
            }}
          >
            <input
              ref={selectPageRef}
              type="text"
              value={selectPage}
              autoComplete="off"
              className={styles["page-title"]}
              onChange={(event) => {
                handleSelectPageChanges(event);
              }}
            ></input>
          </form>

          <button className={styles["page-button"]} onClick={nextPage}>
            <GoTriangleRight />
          </button>
        </div>
      </div>
      <h3 className={styles["page-count"]}>
        {totalPage >= 1
          ? `Showing ${curPage} out of ${totalPage} pages`
          : "No Results"}
      </h3>
      <div className={styles["card-container"]}>
        {receivedList.map((item) => {
          return (
            <div className={styles["card-item"]} key={item.transact_id}>
              <div className={styles["item-header"]}>
                <div className={styles["transact-icon"]}>
                  <FaHashtag />
                </div>
                <h3 className={styles["transact-id"]}>{item.transact_id}</h3>
              </div>

              <div className={styles["item-description"]}>
                <div className={styles["price"]}>{item.price}</div>
                <div className={styles["date"]}>{item.date}</div>
              </div>

              <div className={styles["item-stats"]}>
                <div className={styles["stat"]}>
                  <div className={styles["package-value"]}>
                    {item.package.normalize()}
                  </div>
                  <div className={styles["stat-label"]}>Package Type</div>
                </div>

                <div className={styles["stat"]}>
                  <div
                    className={`${styles["status-value"]} ${
                      styles[item.status]
                    }`}
                  >
                    {item.status}
                  </div>
                  <div className={styles["stat-label"]}>Status</div>
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </div>